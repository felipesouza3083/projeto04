{"version":3,"sources":["serviceWorker.js","forms/textField.js","components/usuarios/FormLogin.js","components/usuarios/FormLoginValidate.js","auth/authServices.js","Login.js","services/loginServices.js","components/usuarios/FormRegister.js","components/usuarios/FormRegisterValidate.js","Register.js","services/usuarioServices.js","forms/textAreaField.js","components/agenda/FormCadastroCompromisso.js","components/agenda/FormCadastroCompromissoValidate.js","services/compromissoServices.js","components/agenda/CadastroCompromissoContainer.js","components/agenda/FormConsultaCompromisso.js","components/agenda/FormConsultaCompromissoValidate.js","components/agenda/GridCompromissos.js","components/agenda/ConsultaCompromissoContainer.js","actions/compromissoActions.js","Admin.js","reducers/compromissoReducer.js","sagas/compromissoSaga.js","index.js"],"names":["Boolean","window","location","hostname","match","textField","input","label","type","placeholder","meta","touched","error","className","autoComplete","FormLogin","props","handleSubmit","onSubmit","Field","name","component","value","reduxForm","form","validate","values","errors","email","senha","onSubmitSuccess","result","dispatch","reset","redirectToLoginPage","href","getUserToken","localStorage","getItem","isAuthenticated","userToken","userTokenExpiration","dataAtual","Date","dataDeExpiracaoDoToken","Login","login","setState","mensagem","erroAcessoNegado","erroValidacao","axios","post","then","response","data","userEmail","tokenInformation","setItem","catch","e","status","console","log","state","bind","this","React","Component","FormRegister","nome","senhaConfirmacao","Register","usuario","erroEmailJaCadastrado","textAreaField","FormCadastroCompromisso","nomeCompromisso","descricao","dataCompromisso","horaCompromisso","apiUrl","getByDatas","dataMin","dataMax","get","interceptors","request","use","config","url","includes","auth","headers","Promise","reject","CadastroCompromissoContainer","compromisso","FormConsultaCompromisso","GridCompromissos","consulta","length","map","item","i","key","colSpan","connect","compromissos","listagemDeCompromissos","ConsultaCompromissoContainer","Admin","emailUsuario","obterUsuarioAutenticado","removeItem","id","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","to","role","aria-haspopup","onClick","logout","path","pathname","initialState","compromissoReducer","action","consultarCompromissos","watcher","compromissoSaga","call","services","put","takeEvery","all","rootReducer","combineReducers","formReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9ecfd860.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nexport const textField = ({\r\n    input,\r\n    label,\r\n    type,\r\n    placeholder,\r\n    meta: {\r\n        touched,\r\n        error\r\n    }\r\n}) => (\r\n        <div className=\"form-group\">\r\n            <label>{label}</label>\r\n            <input type={type} {...input}\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                placeholder={placeholder} />\r\n            <span className=\"text-danger\">\r\n                {\r\n                    touched && (error && <span>{error}</span>)\r\n                }\r\n            </span>\r\n        </div>\r\n    )","import React from 'react';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { textField } from '../../forms/textField';\r\nimport { validate } from './FormLoginValidate';\r\n\r\nlet FormLogin = props => {\r\n    const { handleSubmit } = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field\r\n                name=\"email\"\r\n                component={textField}\r\n                label=\"Email de Acesso\"\r\n                type=\"email\"\r\n                placeholder=\"Informe o seu Email\"\r\n            />\r\n            <Field\r\n                name=\"senha\"\r\n                component={textField}\r\n                label=\"Senha de Acesso\"\r\n                type=\"password\"\r\n                placeholder=\"Informe a sua senha\"\r\n            />\r\n            <input type=\"submit\" value=\"Acessar Sistema\"\r\n                className=\"btn btn-primary btn-user btn-block\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('FormLogin'))\r\n}\r\nFormLogin = reduxForm({\r\n    form: 'FormLogin',\r\n    validate,\r\n    onSubmitSuccess: afterSubmit\r\n})(FormLogin);\r\n\r\nexport default FormLogin;","export const validate = values =>{\r\n    const errors = {};\r\n    if(!values.email){\r\n        errors.email = \"Por favor, preencha o email.\";\r\n    }\r\n\r\n    if(!values.senha){\r\n        errors.senha = \"Por favor, preencha a senha\";\r\n    }\r\n\r\n    return errors;\r\n}","const USER_TOKEN = 'userToken';\r\nconst USER_TOKEN_EXPIRATION = 'userTokenExpiration';\r\nconst USER_EMAIL = 'userEmail';\r\n\r\nexport const signInCredentials = (userEmail, tokenInformation) => {\r\n\r\n    window.localStorage.setItem(USER_TOKEN_EXPIRATION,\r\n        tokenInformation.userTokenExpiration);\r\n\r\n    window.localStorage.setItem(USER_TOKEN,\r\n        tokenInformation.userToken);\r\n\r\n    window.localStorage.setItem(USER_EMAIL,\r\n        userEmail);\r\n};\r\n\r\nexport const signOutCredentials = () => {\r\n    window.localStorage.removeItem(USER_TOKEN);\r\n    window.localStorage.removeItem(USER_TOKEN_EXPIRATION);\r\n    window.localStorage.removeItem(USER_EMAIL);\r\n};\r\n\r\nexport const redirectToAdminPage = () => {\r\n    window.location.href = '/admin';\r\n};\r\n\r\nexport const redirectToLoginPage = () => {\r\n    window.location.href = '/';\r\n};\r\n\r\nexport const getUserToken = () => {\r\n    return localStorage.getItem(USER_TOKEN);\r\n};\r\n\r\nexport const getUserTokenExpiration = () => {\r\n    return localStorage.getItem(USER_TOKEN_EXPIRATION);\r\n};\r\n\r\nexport const getUserEmail = () => {\r\n    return localStorage.getItem(USER_EMAIL);\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    var userToken = getUserToken();\r\n    var userTokenExpiration = getUserTokenExpiration();\r\n\r\n    var dataAtual = new Date();\r\n    var dataDeExpiracaoDoToken = new Date(userTokenExpiration);\r\n\r\n    return (userToken && dataDeExpiracaoDoToken > dataAtual)\r\n}","import React from 'react';\r\nimport FormLogin from './components/usuarios/FormLogin';\r\nimport * as services from './services/loginServices';\r\nimport * as auth from './auth/authServices';\r\n\r\nclass Login extends React.Component {\r\n    //construtor\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //declarando o state do componente\r\n        this.state = {\r\n            mensagem: '',\r\n            erroAcessoNegado: '',\r\n            erroValidacao: ''\r\n        };\r\n\r\n        //registrando a função handleSubmit dentro do construtor\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //função para executar o SUBMIT do formulário\r\n    handleSubmit = (values) => {\r\n\r\n        this.setState({\r\n            mensagem: 'Processando requisição, por favor aguarde...',\r\n            erroAcessoNegado: '',\r\n            erroValidacao: ''\r\n        });\r\n\r\n        services.post(values)\r\n            .then(\r\n                data => {\r\n                    auth.signInCredentials(values.email, data);\r\n\r\n                    auth.redirectToAdminPage();\r\n                }\r\n            )\r\n            .catch(\r\n                e => {\r\n                    var error = e.response;\r\n\r\n                    switch (error.status) {\r\n                        case 400:\r\n                            this.setState({\r\n                                mensagem: '',\r\n                                erroValidacao: 'Ocorreram erros de validação.'\r\n                            });\r\n                            break;\r\n                        case 403:\r\n                            this.setState({\r\n                                mensagem: '',\r\n                                erroAcessoNegado: error.data\r\n                            });\r\n                            break;\r\n                        default:\r\n                            console.log(error);\r\n                            break;\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                            <div className=\"card-body p-0\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"p-5\">\r\n                                            <div className=\"text-center\">\r\n                                                <h1 className=\"h4 text-gray-900 mb-4\">Acesso ao Sistema</h1>\r\n                                                <hr />\r\n                                            </div>\r\n                                            <FormLogin onSubmit={this.handleSubmit} />\r\n                                            <div className=\"mt-2\">\r\n                                                <h5><strong>{this.state.mensagem}</strong></h5>\r\n                                            </div>\r\n                                            <div className=\"mt-2 text-danger\">\r\n                                                <h5><strong>{this.state.erroAcessoNegado}</strong></h5>\r\n                                            </div>\r\n                                            <div className=\"mt-2 text-danger\">\r\n                                                <h5><strong>{this.state.erroValidacao}</strong></h5>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"text-center\">\r\n                                                <a href=\"/register\">Criar conta de usuário</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import axios from 'axios';\r\n\r\nconst apiUrl = \"http://reactagenda-001-site1.ctempurl.com/api/login\";\r\n\r\n//função para realizar uma chamada POST na API\r\nexport const post = (login) => {\r\n    return axios.post(apiUrl, login)\r\n        .then( //promisse\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n}\r\n","import React from 'react';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { textField } from '../../forms/textField';\r\nimport { validate } from './FormRegisterValidate';\r\n\r\nlet FormRegister = props => {\r\n    const { handleSubmit } = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field\r\n                name=\"nome\"\r\n                component={textField}\r\n                label=\"Nome de Acesso\"\r\n                type=\"text\"\r\n                placeholder=\"Informe o seu nome\"\r\n            />\r\n            <Field\r\n                name=\"email\"\r\n                component={textField}\r\n                label=\"Email de Acesso\"\r\n                type=\"email\"\r\n                placeholder=\"Informe o seu Email\"\r\n            />\r\n            <Field\r\n                name=\"senha\"\r\n                component={textField}\r\n                label=\"Senha de Acesso\"\r\n                type=\"password\"\r\n                placeholder=\"Informe a sua senha\"\r\n            />\r\n            <Field\r\n                name=\"senhaConfirmacao\"\r\n                component={textField}\r\n                label=\"Confirme sua Senha\"\r\n                type=\"password\"\r\n                placeholder=\"Confirme a sua senha\"\r\n            />\r\n            <input type=\"submit\" value=\"Realizar Cadastro\"\r\n                className=\"btn btn-primary btn-user btn-block\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst afterSubmit = (result,dispatch) => {\r\n    dispatch(reset('FormRegister'))\r\n}\r\n\r\nFormRegister = reduxForm({\r\n    form: 'FormRegister',\r\n    validate,\r\n    onSubmitSuccess: afterSubmit\r\n})(FormRegister);\r\n\r\nexport default FormRegister;","export const validate = values => {\r\n    const errors = {};\r\n    if (!values.nome) {\r\n        errors.nome = \"Por favor, preencha o nome.\";\r\n    }\r\n\r\n    if (!values.email) {\r\n        errors.email = \"Por favor, preencha o email.\";\r\n    }\r\n\r\n    if (!values.senha) {\r\n        errors.senha = \"Por favor, preencha a senha\";\r\n    }\r\n\r\n    if (!values.senhaConfirmacao) {\r\n        errors.senhaConfirmacao = \"Por favor, confirme a senha\";\r\n    }\r\n\r\n    if (values.senha !== values.senhaConfirmacao) {\r\n        errors.senhaConfirmacao = \"Senhas não conferem\";\r\n    }\r\n\r\n    return errors;\r\n}","import React from 'react';\r\nimport FormRegister from './components/usuarios/FormRegister';\r\nimport * as services from './services/usuarioServices';\r\n\r\nclass Register extends React.Component {\r\n\r\n    //construtor\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //declarando o state do componente\r\n        this.state = {\r\n            mensagem: '',\r\n            erroEmailJaCadastrado: '',\r\n            erroValidacao: ''\r\n        };\r\n\r\n        //registrando a função handleSubmit dentro do construtor\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //função para executar o SUBMIT do formulário\r\n    handleSubmit = (values) => {\r\n\r\n        this.setState({\r\n            mensagem: 'Processando requisição, por favor aguarde...'\r\n        });\r\n\r\n        services.post(values)\r\n            .then(\r\n                data => {\r\n                    this.setState({\r\n                        mensagem: data,\r\n                        erroEmailJaCadastrado : '',\r\n                        erroValidacao:''\r\n                    });\r\n                }\r\n            )\r\n            .catch(\r\n                e => {\r\n                    var error = e.response;\r\n\r\n                    switch (error.status) {\r\n                        case 400:\r\n                            this.setState({\r\n                                mensagem: '',\r\n                                erroValidacao: 'Ocorreram erros de validação.'\r\n                            });\r\n                            break;\r\n                            case 403:\r\n                                this.setState({\r\n                                    mensagem: '',\r\n                                    erroEmailJaCadastrado: error.data\r\n                                });\r\n                                break;\r\n                                default:\r\n                                    console.log(error);\r\n                                break;\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                            <div className=\"card-body p-0\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"p-5\">\r\n                                            <div className=\"text-center\">\r\n                                                <h1 className=\"h4 text-gray-900 mb-4\">Criar conta de usuário</h1>\r\n                                                <hr />\r\n                                            </div>\r\n\r\n                                            <FormRegister\r\n                                                onSubmit={this.handleSubmit} />\r\n\r\n                                            <div className=\"mt-2\">\r\n                                                <h5><strong>{this.state.mensagem}</strong></h5>\r\n                                            </div>\r\n                                            <div className=\"mt-2 text-danger\">\r\n                                                <h5><strong>{this.state.erroEmailJaCadastrado}</strong></h5>\r\n                                            </div>\r\n                                            <div className=\"mt-2 text-danger\">\r\n                                                <h5><strong>{this.state.erroValidacao}</strong></h5>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"text-center\">\r\n                                                <a href=\"/\">Acesso ao Sistema</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import axios from 'axios';\r\n\r\nconst apiUrl = \"http://reactagenda-001-site1.ctempurl.com/api/Usuario\";\r\n\r\nexport const post = (usuario) => {\r\n    return axios.post(apiUrl, usuario)\r\n        .then(\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport const textAreaField = ({\r\n    input,\r\n    label,\r\n    placeholder,\r\n    meta: {\r\n        touched,\r\n        error\r\n    }\r\n}) => (\r\n        <div className=\"form-group\">\r\n            <label>{label}</label>\r\n            <textarea {...input}\r\n                autoComplete=\"off\"\r\n                className=\"form-control\"\r\n                placeholder={placeholder}>\r\n            </textarea>\r\n            <span className=\"text-danger\">\r\n                {\r\n                    touched && (error && <span>{error}</span>)\r\n                }\r\n            </span>\r\n        </div>\r\n    )","import React from 'react';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { textField } from '../../forms/textField';\r\nimport { textAreaField } from '../../forms/textAreaField';\r\nimport { validate } from './FormCadastroCompromissoValidate.js';\r\n\r\nlet FormCadastroCompromisso = props => {\r\n    const { handleSubmit } = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field\r\n                name=\"nomeCompromisso\"\r\n                component={textField}\r\n                label=\"Nome do Compromisso\"\r\n                type=\"text\"\r\n                placeholder=\"Informe o nome do compromisso\"\r\n            />\r\n            <Field\r\n                name=\"dataCompromisso\"\r\n                component={textField}\r\n                label=\"Data do Compromisso\"\r\n                type=\"date\"\r\n            />\r\n            <Field\r\n                name=\"horaCompromisso\"\r\n                component={textField}\r\n                label=\"Hora do Compromisso\"\r\n                placeholder=\"00:00\"\r\n                type=\"text\"\r\n            />\r\n            <Field\r\n                name=\"descricao\"\r\n                component={textAreaField}\r\n                label=\"Descrição do compromisso\"\r\n            />\r\n            <input type=\"submit\" value=\"Cadastrar Compromisso\"\r\n                className=\"btn btn-primary btn-user btn-block\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('FormCadastroCompromisso'));\r\n}\r\n\r\nFormCadastroCompromisso = reduxForm({\r\n    form: 'FormCadastroCompromisso',\r\n    validate,\r\n    onSubmitSuccess: afterSubmit\r\n})(FormCadastroCompromisso);\r\n\r\nexport default FormCadastroCompromisso;","export const validate = values => {\r\n\r\n    const errors = {};\r\n\r\n    if(!values.nomeCompromisso){\r\n        errors.nomeCompromisso = \"Por favor, preencha o nome do compromisso.\";\r\n    }\r\n\r\n    if(!values.descricao){\r\n        errors.descricao = \"Por favor, preencha a descrição.\";\r\n    }\r\n\r\n    if(!values.dataCompromisso){\r\n        errors.dataCompromisso = \"Por favor, preencha a data do compromisso.\";\r\n    }\r\n\r\n    if(!values.horaCompromisso){\r\n        errors.horaCompromisso = \"Por favor, preencha a hora do compromisso.\";\r\n    }\r\n\r\n    return errors;\r\n}","import axios from 'axios';\r\nimport * as auth from '../auth/authServices';\r\n\r\nconst apiUrl = \"http://reactagenda-001-site1.ctempurl.com/api/compromisso\";\r\n\r\n//função para realizar uma chamada POST na API\r\nexport const post = (compromisso) => {\r\n    return axios.post(apiUrl, compromisso)\r\n        .then( //promisse\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n};\r\n\r\n//função para realizar uma chamada PUT na API\r\nexport const put = (compromisso) => {\r\n    return axios.put(apiUrl, compromisso)\r\n        .then( //promisse\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n};\r\n\r\n//função para realizar uma chamada DELETE na API\r\nexport const remove = (id) => {\r\n    return axios.delete(apiUrl + \"/\" + id)\r\n        .then( //promisse\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n};\r\n\r\n//função para realizar uma chamada GET na API\r\nexport const getByDatas = (dataMin, dataMax) => {\r\n    return axios.get(apiUrl + \"/\" + dataMin + \"/\" + dataMax)\r\n        .then( //promisse\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n}\r\n\r\n//função para realizar uma chamada GET por ID na API\r\nexport const getById = (id) => {\r\n    return axios.get(apiUrl + \"/\" + id)\r\n        .then( //promisse\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n};\r\n\r\n//função para interceptar requisições do AXIOS\r\naxios.interceptors.request.use(\r\n\r\n    config => {\r\n\r\n        //verificar se a requisição que API está realizando é para \r\n        //um serviço de compromisso (URL)\r\n        if(config.url.includes('compromisso')){\r\n\r\n            if(auth.isAuthenticated()){\r\n                //incluir um HEADER na requisição..\r\n                config.headers['Authorization'] = 'Bearer ' + auth.getUserToken();\r\n            }\r\n            else{\r\n                auth.redirectToLoginPage();\r\n            }\r\n        }\r\n\r\n        return config;\r\n    },\r\n    error => {\r\n        Promise.reject(error);\r\n    }\r\n\r\n);","import React from 'react';\r\nimport FormCadastroCompromisso from './FormCadastroCompromisso';\r\nimport * as services from '../../services/compromissoServices';\r\n\r\nclass CadastroCompromissoContainer extends React.Component {\r\n\r\n    //construtor\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //declarando o state do componente\r\n        this.state = {\r\n            mensagem: '',\r\n            erroValidacao: ''\r\n        };\r\n\r\n        //registrando a função handleSubmit dentro do construtor\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //função para executar o SUBMIT do formulário\r\n    handleSubmit = (values) => {\r\n\r\n        this.setState({\r\n            mensagem: 'Processando requisição, por favor aguarde...',\r\n            erroValidacao: ''\r\n        });\r\n\r\n        services.post(values)\r\n            .then(\r\n                data => {\r\n                    this.setState({\r\n                        mensagem: data\r\n                    });\r\n                }\r\n            )\r\n            .catch(\r\n                e => {\r\n                    var error = e.response;\r\n\r\n                    switch (error.status) {\r\n                        case 400:\r\n                            this.setState({\r\n                                mensagem: '',\r\n                                erroValidacao: 'Ocorreram erros de validação.'\r\n                            });\r\n                            break;\r\n                        case 401:\r\n                            this.setState({\r\n                                mensagem: '',\r\n                                erroValidacao: 'Não autorizado'\r\n                            });\r\n                            break;\r\n                        default:\r\n                            console.log(error);\r\n                            break;\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"h3 mb-2 text-gray-800\">Cadastro de Compromissos</h1>\r\n                <p className=\"mb-4\">\r\n                    Preencha o formulário abaixo para cadastrar compromissos em sua agenda.\r\n                </p>\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-primary\">Formulário de Cadastro</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n\r\n                        <div className=\"mt-2 mb-2\">\r\n                            <h5><strong>{this.state.mensagem}</strong></h5>\r\n                        </div>\r\n\r\n                        <div className=\"mt-2 mb-2 text-danger\">\r\n                            <h5><strong>{this.state.erroValidacao}</strong></h5>\r\n                        </div>\r\n\r\n                        <FormCadastroCompromisso\r\n                            onSubmit={this.handleSubmit}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CadastroCompromissoContainer;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { textField } from '../../forms/textField';\r\nimport { validate } from './FormConsultaCompromissoValidate';\r\n\r\nlet FormConsultaCompromisso = props => {\r\n    const { handleSubmit } = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field\r\n                name=\"dataMin\"\r\n                component={textField}\r\n                label=\"Data de Inicio:\"\r\n                type=\"date\" />\r\n\r\n            <Field\r\n                name=\"dataMax\"\r\n                component={textField}\r\n                label=\"Data de Término:\"\r\n                type=\"date\" />\r\n\r\n            <input type=\"submit\"\r\n                value=\"Pesquisar Compromissos\"\r\n                className=\"btn btn-primary btn-user btn-block\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nFormConsultaCompromisso = reduxForm({\r\n    form: 'FormConsultaCompromisso',\r\n    validate\r\n})(FormConsultaCompromisso);\r\n\r\nexport default FormConsultaCompromisso;","export const validate = values => {\r\n\r\n    const errors = {};\r\n\r\n    if(!values.dataMin){\r\n        errors.dataMin = \"Por favor, informe a data de inicio do período.\";\r\n    }\r\n\r\n    if(!values.dataMax){\r\n        errors.dataMax = \"Por favor, informe a data de termino do período.\";\r\n    }\r\n\r\n    return errors;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        consulta: state.compromissos.listagemDeCompromissos\r\n    }\r\n}\r\n\r\nclass GridCompromissos extends React.Component {\r\n    render() {\r\n        var self = this;\r\n        return (\r\n            <div>\r\n                {\r\n                    self.props.consulta.length > 0 ?\r\n                        <table className=\"table table-bordered table-stripped table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Nome do Compromisso</th>\r\n                                    <th>Data</th>\r\n                                    <th>Hora</th>\r\n                                    <th>Descrição</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    self.props.consulta.map(\r\n                                        (item, i) => (\r\n                                            <tr key={i}>\r\n                                                <td>{item.nomeCompromisso}</td>\r\n                                                <td>{item.dataCompromisso}</td>\r\n                                                <td>{item.horaCompromisso}</td>\r\n                                                <td>{item.descricao}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td colSpan=\"5\">Quantidade de Compromissos: {self.props.consulta.length}</td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table> : <div>Não há registros</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GridCompromissos);","import React from 'react';\r\nimport FormConsultaCompromisso from './FormConsultaCompromisso';\r\nimport GridCompromissos from './GridCompromissos';\r\nimport * as actions from '../../actions/compromissoActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ConsultaCompromissoContainer extends React.Component {\r\n    handleSubmit = (values) => {\r\n        this.props.dispatch({\r\n            type: actions.CONSULTAR_COMPROMISSOS,\r\n            data: values\r\n        }\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"h3 mb-2 text-gray-800\">Consulta de Compromissos</h1>\r\n                <p className=\"mb-4\">\r\n                    Pesquise abaixo os compromissos em sua agenda\r\n                </p>\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-primary\">Formulário de Pesquisa</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <FormConsultaCompromisso\r\n                            onSubmit={this.handleSubmit}\r\n                        />\r\n                        <div className=\"table-responsive mt-2\">\r\n                            <GridCompromissos />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(ConsultaCompromissoContainer)","export const CONSULTAR_COMPROMISSOS = \"consultar_compromissos\";\r\nexport const SUCESSO_CONSULTA_COMPROMISSOS = \"sucesso_consulta_compromissos\";\r\nexport const ERRO_CONSULTA_COMPROMISSOS = \"erro_consulta_compromissos\";","import React from 'react';\r\nimport { Route, NavLink, HashRouter, Redirect } from 'react-router-dom';\r\n\r\nimport CadastroCompromissoContainer from './components/agenda/CadastroCompromissoContainer';\r\nimport ConsultaCompromissoContainer from './components/agenda/ConsultaCompromissoContainer';\r\n\r\nimport * as auth from './auth/authServices';\r\n\r\nclass Admin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            emailUsuario: ''\r\n        };\r\n\r\n        this.obterUsuarioAutenticado = this.obterUsuarioAutenticado.bind(this);\r\n    };\r\n\r\n    obterUsuarioAutenticado() {\r\n        this.setState({\r\n            emailUsuario: auth.getUserEmail()\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.obterUsuarioAutenticado();\r\n    }\r\n\r\n    logout() {\r\n        auth.signOutCredentials();\r\n        auth.redirectToLoginPage();\r\n    }\r\n\r\n    render() {\r\n        return auth.isAuthenticated() ? (\r\n\r\n            <HashRouter>\r\n\r\n                <div id=\"wrapper\">\r\n                    <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\r\n                        <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"/admin\">\r\n                            <div className=\"sidebar-brand-icon rotate-n-15\">\r\n                                <i className=\"fas fa-laugh-wink\"></i>\r\n                            </div>\r\n                            <div className=\"sidebar-brand-text mx-3\">Agenda de Compromissos</div>\r\n                        </a>\r\n                        <hr className=\"sidebar-divider my-0\" />\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/admin\">\r\n                                <i className=\"fas fa-fw fa-tachometer-alt\"></i>\r\n                                <span>Página inicial</span></a>\r\n                        </li>\r\n                        <hr className=\"sidebar-divider\" />\r\n                        <div className=\"sidebar-heading\">\r\n                            Menu de Opções\r\n                    </div>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link collapsed\" href=\"/admin#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n                                <i className=\"fas fa-fw fa-cog\"></i>\r\n                                <span>Gerenciar Compromissos</span>\r\n                            </a>\r\n                            <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\r\n                                <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                                    <NavLink to=\"/cadastro-compromisso\" className=\"collapse-item\">\r\n                                        Cadastrar Compromissos\r\n                                </NavLink>\r\n                                    <NavLink to=\"/consulta-compromisso\" className=\"collapse-item\">\r\n                                        Consultar Compromissos\r\n                                </NavLink>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        <div id=\"content\">\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\r\n                                    <i className=\"fa fa-bars\"></i>\r\n                                </button>\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item dropdown no-arrow\">\r\n                                        <a className=\"nav-link dropdown-toggle\" href=\"/admin#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\"><strong>Usuário Autenticado:</strong><br />{this.state.emailUsuario}</span>\r\n                                        </a>\r\n                                        <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\r\n                                            <a className=\"dropdown-item\" href=\"/admin#\">\r\n                                                <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                                            Minha Conta\r\n                                        </a>\r\n                                            <div className=\"dropdown-divider\"></div>\r\n                                            <a className=\"dropdown-item\" href=\"/admin#\"\r\n                                                onClick={() => this.logout()}>\r\n                                                <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                                            Sair do Sistema\r\n                                        </a>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                            <div className=\"container-fluid\">\r\n\r\n                                <Route path=\"/cadastro-compromisso\"\r\n                                    component={CadastroCompromissoContainer} />\r\n\r\n                                <Route path=\"/consulta-compromisso\"\r\n                                    component={ConsultaCompromissoContainer} />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <footer className=\"sticky-footer bg-white\">\r\n                            <div className=\"container my-auto\">\r\n                                <div className=\"copyright text-center my-auto\">\r\n                                    <span>Copyright &copy; COTI Informática 2020</span>\r\n                                </div>\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                </div>\r\n\r\n            </HashRouter>\r\n        ) : (\r\n                <Redirect to={{ pathname: auth.redirectToLoginPage() }} />\r\n            )\r\n    }\r\n}\r\n\r\nexport default Admin;","import * as actions from '../actions/compromissoActions';\r\n\r\nconst initialState = {\r\n    listagemDeCompromissos: []\r\n};\r\n\r\nconst compromissoReducer = (\r\n    state = initialState,\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case actions.SUCESSO_CONSULTA_COMPROMISSOS:\r\n            return {\r\n                ...state,\r\n                listagemDeCompromissos: action.data\r\n            };\r\n        case actions.ERRO_CONSULTA_COMPROMISSOS:\r\n            console.log(action.data);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default compromissoReducer;","import * as services from '../services/compromissoServices';\r\nimport * as actions from '../actions/compromissoActions';\r\n\r\nimport { all, put, takeEvery, call } from 'redux-saga/effects';\r\n\r\nfunction* consultarCompromissos(action) {\r\n    try {\r\n        var dataMin = action.data.dataMin;\r\n        var dataMax = action.data.dataMax;\r\n\r\n        const result = yield call(services.getByDatas, dataMin, dataMax);\r\n\r\n        yield put({ type: actions.SUCESSO_CONSULTA_COMPROMISSOS, data: result })\r\n    } catch (e) {\r\n        yield put({ type: actions.ERRO_CONSULTA_COMPROMISSOS, data: e });\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeEvery(actions.CONSULTAR_COMPROMISSOS, consultarCompromissos);\r\n}\r\n\r\nexport default function* compromissoSaga() {\r\n    yield all([watcher()]);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport Login from './Login';\nimport Register from './Register';\nimport Admin from './Admin';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { Provider } from 'react-redux';\nimport { reducer as formReducer } from 'redux-form';\nimport compromissoReducer from './reducers/compromissoReducer';\nimport compromissoSaga from './sagas/compromissoSaga';\n\nconst rootReducer = combineReducers({\n  compromissos: compromissoReducer,\n  form: formReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(compromissoSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact={true} component={Login} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/admin\" component={Admin} />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}